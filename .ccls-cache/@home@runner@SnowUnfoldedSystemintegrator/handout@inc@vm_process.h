/* DO NOT EDIT THIS FILE
 * - vm_process.h
 * - Copyright: Prof. Kevin Andrea, George Mason University.  All Rights Reserved
 * - Date: Aug 2023
 *
 *   Provides structure definitions and prototypes for the Process Manager of TRILBY VM
 */

#ifndef VM_PROCESS_H
#define VM_PROCESS_H

#include "vm_settings.h"

// Internal struct to track Process Handling
typedef struct process_data {
  char *cmd; // Pointer to the command portion of tokenize_cmd
  char input_orig[MAX_CMD]; // Original user-input command
  char input_toks[MAX_CMD]; // Tokenized copy of full-command (to support pointers)
  char *argv[MAX_ARGS];     // Pointers to each arg in tokenize_cmd
  int priority_level;       // Priority level of the Process
  int is_critical;          // 1 If the process is run with critical permissions
  pid_t pid;                // OS Generated, Guaranteed Unique
  struct process_data *next;// Singly Linked List
} Process_data_s;

// Prototypes
void create_process(Process_data_s *proc);
void free_data_proc(Process_data_s *proc);
int process_find(pid_t pid);
int initialize_process_system();
void deallocate_process_system();

#endif
